#******************************************************************************
#
#    ＊ ショップ商品準備
#
#  --------------------------------------------------------------------------
#    バージョン ： 1.0.0
#    対      応 ： RPGツクールVX Ace : RGSS3
#    制  作  者 ： ＣＡＣＡＯ
#    配  布  元 ： https://cacaosoft.mars.jp/
#  --------------------------------------------------------------------------
#   == 概    要 ==
#
#    ： ショップ画面で表示するアイテムを複数回に分けて設定可能にします。
#
#  --------------------------------------------------------------------------
#   == 注意事項 ==
#
#    ※ 設定された商品のリストは、ゲーム終了時に初期化(空に)されます。
#    ※ 重複削除・並び替えでは、価格を考慮しません。
#
#  --------------------------------------------------------------------------
#   == 使用方法 ==
#
#    ★ 商品の準備
#     イベントコマンド『スクリプト』に prepare_shop と記述してください。
#     その後の『ショップの処理』で商品を追加できます。
#
#    ★ ショップ画面の表示
#     イベントコマンド『スクリプト』に open_shop と記述してください。
#     引数に true を指定すると 購入のみ の設定で起動します。
#
#    ★ 商品の追加 (スクリプト)
#     イベントコマンド『スクリプト』に下記のスクリプトを記述してください。
#       add_shop_goods(kind, id, price)
#         kind  .. 0:アイテム, 1:武器, 2:防具
#         id    .. アイテムの ID
#         price .. アイテムの価格 (省略時、データベースで設定した価格)
#
#    ★ 商品の準備中止
#     イベントコマンド『スクリプト』に close_shop と記述してください。
#
#    ★ 商品の重複を削除
#     イベントコマンド『スクリプト』に unique_shop_goods と記述してください。
#
#    ★ 商品を ID 順に並び替え
#     イベントコマンド『スクリプト』に sort_shop_goods と記述してください。
#
#
#******************************************************************************


#/////////////////////////////////////////////////////////////////////////////#
#                                                                             #
#                下記のスクリプトを変更する必要はありません。                 #
#                                                                             #
#/////////////////////////////////////////////////////////////////////////////#


class Game_Temp
  #--------------------------------------------------------------------------
  # ● 公開インスタンス変数
  #--------------------------------------------------------------------------
  attr_accessor :shop_goods               # ショップ商品リスト
end

class Game_Interpreter
  #--------------------------------------------------------------------------
  # ●
  #--------------------------------------------------------------------------
  def prepare_shop
    $game_temp.shop_goods = []
  end
  #--------------------------------------------------------------------------
  # ●
  #--------------------------------------------------------------------------
  def open_shop(purchase_only = false)
    return if $game_party.in_battle
    return unless $game_temp.shop_goods
    SceneManager.call(Scene_Shop)
    SceneManager.scene.prepare($game_temp.shop_goods, purchase_only)
    close_shop
    Fiber.yield
  end
  #--------------------------------------------------------------------------
  # ●
  #--------------------------------------------------------------------------
  def close_shop
    $game_temp.shop_goods = nil
  end
  #--------------------------------------------------------------------------
  # ●
  #--------------------------------------------------------------------------
  def add_shop_goods(*params)
    if params[0].kind_of?(RPG::BaseItem)
      case params[0]
      when RPG::Item   ; kind = 0
      when RPG::Weapon ; kind = 1
      when RPG::Armor  ; kind = 2
      else             ; raise TypeError
      end
      id = params[0].id
      price = params[1]
    else
      kind, id, price = params
    end
    if price
      $game_temp.shop_goods.push([kind, id, 1, price])
    else
      $game_temp.shop_goods.push([kind, id, 0, 0])
    end
  end
  #--------------------------------------------------------------------------
  # ●
  #--------------------------------------------------------------------------
  def sort_shop_goods
    $game_temp.shop_goods.sort_by! {|item| item[0] * 1000 + item[1] }
  end
  #--------------------------------------------------------------------------
  # ●
  #--------------------------------------------------------------------------
  def unique_shop_goods
    $game_temp.shop_goods.replace(
      $game_temp.shop_goods.uniq {|item| item[0, 2] })
    # sort_shop_goods 後に実行すると異常終了するための対策 (下記と同義)
    # $game_temp.shop_goods.uniq! {|item| item[0, 2] }
  end
  #--------------------------------------------------------------------------
  # ○ ショップの処理
  #--------------------------------------------------------------------------
  alias _cao_prepare_shop_command_302 command_302
  def command_302
    if $game_temp.shop_goods
      $game_temp.shop_goods.push(@params)
      while next_event_code == 605
        @index += 1
        $game_temp.shop_goods.push(@list[@index].parameters)
      end
    else
      _cao_prepare_shop_command_302
    end
  end
end
